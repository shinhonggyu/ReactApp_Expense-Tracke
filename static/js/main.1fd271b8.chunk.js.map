{"version":3,"sources":["components/Header.jsx","context/globalContext.js","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","context/globalReducer.js","context/GlobalState.js","App.jsx","index.js"],"names":["Header","globalContext","createContext","Balance","total","useContext","GlobalContext","transactions","map","transaction","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","filter","expense","className","Transaction","deleteTransaction","sign","text","Math","abs","onClick","id","TransactionList","transation","AddTransaction","useState","setText","setAmount","addTransaction","onSubmit","e","preventDefault","newTransaction","uuid","htmlFor","type","value","onChange","target","placeholder","state","action","payload","GlobalState","props","useReducer","globalReducer","dispatch","Provider","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fd271b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return <h2>Expense Tracker</h2>;\r\n};\r\n\r\nexport default Header;\r\n","import { createContext } from 'react';\r\n\r\nconst globalContext = createContext();\r\n\r\nexport default globalContext;\r\n","import React, { useContext } from 'react';\r\nimport GlobalContext from '../context/globalContext';\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>{total}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from 'react';\r\nimport GlobalContext from '../context/globalContext';\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense =\r\n    amounts //\r\n      .filter((item) => item < 0) //\r\n      .reduce((acc, item) => (acc += item), 0) *\r\n    -(1) //\r\n      .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">+${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">-${expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from 'react';\r\nimport GlobalContext from '../context/globalContext';\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text}{' '}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from 'react';\r\nimport GlobalContext from '../context/globalContext';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transation) => (\r\n          <Transaction key={transation.id} transaction={transation} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useContext, useState } from 'react';\r\nimport GlobalContext from '../context/globalContext';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: uuid(),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n\r\n    setText('');\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport GlobalContext from './globalContext';\r\nimport globalReducer from './globalReducer';\r\n\r\nconst GlobalState = (props) => {\r\n  const initialState = {\r\n    transactions: [],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(globalReducer, initialState);\r\n\r\n  // Delete Actions\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  // Add Actions\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalState;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport GlobalState from './context/GlobalState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GlobalState>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}